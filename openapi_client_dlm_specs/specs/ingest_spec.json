{
    "openapi": "3.1.0",
    "info": {
        "title": "SKA-DLM: Ingest Manager REST API",
        "description": "REST interface of the SKA-DLM Ingest Manager",
        "license": {
            "name": "BSD-3-Clause",
            "identifier": "BSD-3-Clause"
        },
        "version": "0.2.0"
    },
    "paths": {
        "/ingest/init_data_item": {
            "post": {
                "summary": "Init Data Item",
                "tags": [
                    "ingest"
                ],
                "description": "Initialize a new data_item.\n\nitem_name or json_data is required.",
                "operationId": "init_data_item",
                "parameters": [
                    {
                        "name": "item_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "the item_name, can be empty, but then json_data has to be specified.",
                            "title": "Item Name"
                        },
                        "description": "the item_name, can be empty, but then json_data has to be specified."
                    },
                    {
                        "name": "phase",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "the phase this item is set to (usually inherited from the storage)",
                            "default": "GAS",
                            "title": "Phase"
                        },
                        "description": "the phase this item is set to (usually inherited from the storage)"
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Validated Bearer token with UserInfo",
                            "title": "Authorization"
                        },
                        "description": "Validated Bearer token with UserInfo"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "data item table values.",
                                "title": "Json Data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Init Data Item"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingest/register_data_item": {
            "post": {
                "summary": "Register Data Item",
                "tags": [
                    "ingest"
                ],
                "description": "Ingest a data_item (register function is an alias).\n\nThis high level function is a combination of init_data_item, set_uri and set_state(READY).\nIt also checks whether a data_item is already registered on the requested storage.\n\n(1) check whether requested storage is known and accessible\n(2) check, if required, whether item is accessible/exists on that storage\n(3) check whether item is already registered on that storage\n(4) initialize the item on the storage\n(5) set the access path to the payload\n(6) set state to READY\n(7) save metadata in the data_item table",
                "operationId": "register_data_item",
                "parameters": [
                    {
                        "name": "item_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "item name to register with. Does not need to be unique.",
                            "title": "Item Name"
                        },
                        "description": "item name to register with. Does not need to be unique."
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "the relative access path to the payload.",
                            "title": "Uri"
                        },
                        "description": "the relative access path to the payload."
                    },
                    {
                        "name": "item_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ItemType",
                            "default": "file"
                        }
                    },
                    {
                        "name": "storage_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "the name of the configured storage volume (name or ID required)",
                            "default": "",
                            "title": "Storage Name"
                        },
                        "description": "the name of the configured storage volume (name or ID required)"
                    },
                    {
                        "name": "storage_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "the ID of the configured storage.",
                            "default": "",
                            "title": "Storage Id"
                        },
                        "description": "the ID of the configured storage."
                    },
                    {
                        "name": "parents",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "uuid of parent item",
                            "title": "Parents"
                        },
                        "description": "uuid of parent item"
                    },
                    {
                        "name": "do_storage_access_check",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "perform check_storage_access() against provided storage and uri",
                            "default": true,
                            "title": "Do Storage Access Check"
                        },
                        "description": "perform check_storage_access() against provided storage and uri"
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Validated Bearer token with UserInfo",
                            "title": "Authorization"
                        },
                        "description": "Validated Bearer token with UserInfo"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "metadata provided by the client",
                                "title": "Metadata"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Register Data Item"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "ItemType": {
                "type": "string",
                "enum": [
                    "unknown",
                    "file",
                    "container"
                ],
                "title": "ItemType",
                "description": "Data Item on the filesystem."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}
